Revision history for Perl extension IPC::Bashem.

0.31 Tue Jun  6 01:54:59 EDT 2000
   - t/pty.t should now report what was received when checking it against
     a regex.  This is because 0.3's failing a few tests on ppc-linux
     and the ok( $out =~ /.../ ) ; wasn't giving me enough info.  I chose
     the 1 arg form due to older perl dists' Test.pm not grokking
     ok( $out, qr// ) ;.  I should really do this to t/*.t, but I'm tired.
   - Removed the misfired Run/Pty.pm from the dist.

0.3  Sat Jun  3 08:33:17 EDT 2000
   - Changed spelling of '<|<' and '>|>' to '<pipe' and '>pipe'.  This
     is to make it less confusing (I hope), since '>|' is a valid construct
     in some shells with totally unrelated semantics, and I plan on adding
     it to IPC::Run if a noclobber option ever makes it in.
   - Added '<pty<' and '>pty>' operators.

0.21 Fri Jun  2 12:49:08 EDT 2000
   - Added some advice for dealing with obstinate children
   - Converted many methods to plain subs for simplicity & performance
   - Converted to using local $debug to control debugging status for
     simplicity's sake.  Don't know about performance effects, since
     dynamic scope lookups can be slow.

0.2  Thu Jun  1 01:48:29 EDT 2000
   - Undid the creation of a pipe when passing a \*FOO or an IO::Handle
     ref and added '<|<', \*IN and '>|>', \*OUT syntax instead.  This was
     because some very subtle bugs might have occured if \*FOO was left
     in the wrong opened/closed state before calling run(), start() or
     harness().  Now, \*FOO must be open before the start() call, and
     '<|<' and '>|>' will close \*IN or \*OUT (or whatever) and open
     a pipe on it.  This is analagous to IPC/Open{2,3}.pm behaviors.
   - Added eg/factorial_scalar and eg/runsh.  Rewrote eg/factorial_pipe.
   - Fixed bug that was preventing input scalar refs (ie input for the 
     child process) from ever being read from a second time.  This
     caused pump() to hang.
   - Cleaned up calculation and use of timeout values so that when
     select() times out, it isn't called again.  It's now adding one
     second to the timeout value because time() resolution is 1 second
     and we want to guarantee a minimum timeout even when we sample the
     start time at the end of a second
   - minor name changes to some field names to make the code marginally
     less obscure.
   - Fixed the MakeMaker settings and the directory layout so "make install"
     actually works.

0.1  Tue Apr 25 22:10:07 2000

